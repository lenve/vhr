<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sang.mapper.EmployeeecMapper">
  <resultMap id="BaseResultMap" type="org.sang.bean.Employeeec">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="ecDate" jdbcType="DATE" property="ecDate" />
    <result column="ecReason" jdbcType="VARCHAR" property="ecReason" />
    <result column="ecPoint" jdbcType="INTEGER" property="ecPoint" />
    <result column="ecType" jdbcType="INTEGER" property="ecType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap id="EcExcelMap" type="org.sang.bean.EmployeeecExcelVo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="ecDate" jdbcType="DATE" property="ecDate" />
    <result column="ecReason" jdbcType="VARCHAR" property="ecReason" />
    <result column="ecPoint" jdbcType="INTEGER" property="ecPoint" />
    <result column="ecType" jdbcType="INTEGER" property="ecType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="ecTypeText" jdbcType="VARCHAR" property="ecTypeText" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, eid, ecDate, ecReason, ecPoint, ecType, remark
  </sql>
  <select id="selectByExample" parameterType="org.sang.example.EmployeeecExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from employeeec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employeeec
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employeeec
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.sang.example.EmployeeecExample">
    delete from employeeec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.sang.bean.Employeeec">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employeeec (eid, ecDate, ecReason, 
      ecPoint, ecType, remark
      )
    values (#{eid,jdbcType=INTEGER}, #{ecDate,jdbcType=DATE}, #{ecReason,jdbcType=VARCHAR}, 
      #{ecPoint,jdbcType=INTEGER}, #{ecType,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.sang.bean.Employeeec">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employeeec
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        eid,
      </if>
      <if test="ecDate != null">
        ecDate,
      </if>
      <if test="ecReason != null">
        ecReason,
      </if>
      <if test="ecPoint != null">
        ecPoint,
      </if>
      <if test="ecType != null">
        ecType,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="ecDate != null">
        #{ecDate,jdbcType=DATE},
      </if>
      <if test="ecReason != null">
        #{ecReason,jdbcType=VARCHAR},
      </if>
      <if test="ecPoint != null">
        #{ecPoint,jdbcType=INTEGER},
      </if>
      <if test="ecType != null">
        #{ecType,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.sang.example.EmployeeecExample" resultType="java.lang.Long">
    select count(*) from employeeec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employeeec
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eid != null">
        eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.ecDate != null">
        ecDate = #{record.ecDate,jdbcType=DATE},
      </if>
      <if test="record.ecReason != null">
        ecReason = #{record.ecReason,jdbcType=VARCHAR},
      </if>
      <if test="record.ecPoint != null">
        ecPoint = #{record.ecPoint,jdbcType=INTEGER},
      </if>
      <if test="record.ecType != null">
        ecType = #{record.ecType,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employeeec
    set id = #{record.id,jdbcType=INTEGER},
      eid = #{record.eid,jdbcType=INTEGER},
      ecDate = #{record.ecDate,jdbcType=DATE},
      ecReason = #{record.ecReason,jdbcType=VARCHAR},
      ecPoint = #{record.ecPoint,jdbcType=INTEGER},
      ecType = #{record.ecType,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.sang.bean.Employeeec">
    update employeeec
    <set>
      <if test="eid != null">
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="ecDate != null">
        ecDate = #{ecDate,jdbcType=DATE},
      </if>
      <if test="ecReason != null">
        ecReason = #{ecReason,jdbcType=VARCHAR},
      </if>
      <if test="ecPoint != null">
        ecPoint = #{ecPoint,jdbcType=INTEGER},
      </if>
      <if test="ecType != null">
        ecType = #{ecType,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.sang.bean.Employeeec">
    update employeeec
    set eid = #{eid,jdbcType=INTEGER},
      ecDate = #{ecDate,jdbcType=DATE},
      ecReason = #{ecReason,jdbcType=VARCHAR},
      ecPoint = #{ecPoint,jdbcType=INTEGER},
      ecType = #{ecType,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllEmps" resultType="org.sang.bean.Employee">
        select * from employee;
    </select>

  <delete id="deleteEC">
    DELETE FROM employeeec WHERE id IN
    <foreach collection="ids" separator="," item="id" open="(" close=")">
      #{id}
    </foreach>
  </delete>

  <select id="selectByKeyForExcel" resultType="org.sang.bean.EmployeeecExcelVo">
       select ec.*,e.name,hd.dictName as ecTypeText from employeeec ec left join employee e on ec.eid = e.id

    left join hr_dict hd on hd.`desc` ='奖罚类型' and ec.ecType = hd.dictValue
        where e.name like concat('%',#{keywords},'%')
    <if test="start!=null and size!=null">
      order by ec.id limit #{start},#{size}
    </if>
    </select>

  <select id="selectByKey" resultMap="EcExcelMap">
    select * from employeeec ec left join employee e on ec.eid = e.id
    where e.name like concat('%',#{keywords},'%')
    <if test="start!=null and size!=null">
      order by ec.id limit #{start},#{size}
    </if>
  </select>

  <select id="getCountByKeywords" resultType="Long">
    select  count(*) from employeeec ec left join employee e on ec.eid = e.id
    where e.name like concat('%',#{keywords},'%')

  </select>
    <insert id="addAwards">
        insert into employeeec (eid, ecDate,
        ecReason, ecPoint, ecType, remark

        )
        values
        <foreach collection="awards" item="award" separator=",">
            (#{award.eid,jdbcType=INTEGER},
            #{award.ecDate,jdbcType=DATE},
            #{award.ecReason,jdbcType=CHAR},
            #{award.ecPoint,jdbcType=INTEGER},
            #{award.ecType,jdbcType=INTEGER},
            #{award.remark,jdbcType=CHAR}
            )
        </foreach>
    </insert>
</mapper>